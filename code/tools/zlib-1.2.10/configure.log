--------------------
./configure --prefix=/home/zk/linux/code/application/lib/zlib
2023年 11月 21日 星期二 23:57:13 CST
=== ztest20182.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -c ztest20182.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest20182.c ===
int foo() { return 0; }
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -c -O2 -pipe -g -feliminate-unused-debug-types ztest20182.c

Checking for shared library support...
=== ztest20182.c ===
extern int getchar();
int hello() {return getchar();}
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -w -c -O2 -pipe -g -feliminate-unused-debug-types -fPIC ztest20182.c
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O2 -pipe -g -feliminate-unused-debug-types -fPIC -o ztest20182.so ztest20182.o
Building shared library libz.so.1.2.10 with arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi.

=== ztest20182.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -c -O2 -pipe -g -feliminate-unused-debug-types ztest20182.c
Checking for size_t... Yes.


=== ztest20182.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -c -O2 -pipe -g -feliminate-unused-debug-types -D_LARGEFILE64_SOURCE=1 ztest20182.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest20182.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -O2 -pipe -g -feliminate-unused-debug-types -D_LARGEFILE64_SOURCE=1 -o ztest20182 ztest20182.c
Checking for strerror... Yes.

=== ztest20182.c ===
#include <unistd.h>
int main() { return 0; }
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -c -O2 -pipe -g -feliminate-unused-debug-types -D_LARGEFILE64_SOURCE=1 ztest20182.c
Checking for unistd.h... Yes.

=== ztest20182.c ===
#include <stdarg.h>
int main() { return 0; }
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -c -O2 -pipe -g -feliminate-unused-debug-types -D_LARGEFILE64_SOURCE=1 ztest20182.c
Checking for stdarg.h... Yes.

=== ztest20182.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -c -O2 -pipe -g -feliminate-unused-debug-types -D_LARGEFILE64_SOURCE=1 ztest20182.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest20182.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -O2 -pipe -g -feliminate-unused-debug-types -D_LARGEFILE64_SOURCE=1 -o ztest20182 ztest20182.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest20182.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -c -O2 -pipe -g -feliminate-unused-debug-types -D_LARGEFILE64_SOURCE=1 ztest20182.c
Checking for return value of vsnprintf()... Yes.

=== ztest20182.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -c -O2 -pipe -g -feliminate-unused-debug-types -D_LARGEFILE64_SOURCE=1 ztest20182.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = arm-ostl-linux-gnueabi-ar
ARFLAGS = rc
CC = arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi
CFLAGS = -O2 -pipe -g -feliminate-unused-debug-types -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = arm-ostl-linux-gnueabi-gcc -E -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi
EXE =
LDCONFIG = ldconfig
LDFLAGS = -Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed
LDSHARED = arm-ostl-linux-gnueabi-gcc -mthumb -mfpu=neon-vfpv4 -mfloat-abi=hard -mcpu=cortex-a7 --sysroot=/opt/st/stm32mp1/3.1-snapshot/sysroots/cortexa7t2hf-neon-vfpv4-ostl-linux-gnueabi -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = arm-ostl-linux-gnueabi-ranlib
SFLAGS = -O2 -pipe -g -feliminate-unused-debug-types -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.10
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.10
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/zk/linux/code/application/lib/zlib
sharedlibdir = ${libdir}
uname = Linux
--------------------


